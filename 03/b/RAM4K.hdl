// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way16(in = in, sel[0..2] = address[9..11], a = ram1, b = ram2, c = ram3, d = ram4, e = ram5, f = ram6, g = ram7, h = ram8);
	DMux8Way(in = load, sel[0..2] = address[9..11], a = loada, b = loadb, c = loadc, d = loadd, e = loade, f = loadf, g = loadg, h = loadh);
	RAM512(in = ram1, load = loada, address[0..8] = address[0..8], out = out1);
	RAM512(in = ram2, load = loadb, address[0..8] = address[0..8], out = out2);
	RAM512(in = ram3, load = loadc, address[0..8] = address[0..8], out = out3);
	RAM512(in = ram4, load = loadd, address[0..8] = address[0..8], out = out4);
	RAM512(in = ram5, load = loade, address[0..8] = address[0..8], out = out5);
	RAM512(in = ram6, load = loadf, address[0..8] = address[0..8], out = out6);
	RAM512(in = ram7, load = loadg, address[0..8] = address[0..8], out = out7);
	RAM512(in = ram8, load = loadh, address[0..8] = address[0..8], out = out8);
	Mux8Way16(a = out1, b = out2, c = out3, d = out4, e = out5, f = out6, g = out7, h = out8, sel[0..2] = address[9..11], out = out);
}